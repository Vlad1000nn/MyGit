#include <iostream>
#include <bitset>
#include <set>
#include <map>
#include <queue>
#include <cmath>
#include <array>
#include <unordered_map>
#include <cassert>
#include <functional>
#include <string>

using namespace std;
using ll = int;
using ld = long double;

using vi = vector<ll>;
using vvi = vector<vi>;

using vl = vi;
using vvl = vvi;

#define forx(i, a, b) for(ll i=a;i<b;++i)
#define forxr(i, a, b) for(ll i=a;i>b;--i)

#define isz(x) (int)(x).size()

#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()


#pragma GCC optimize("Ofast,unroll-loops")
#pragma GCC target("avx,avx2,fma")

ll binpow(ll a, ll b){
ll ans = 1;
while(b){
	if(b&1) 
	ans *= a;
	a*=a;
	b /= 2;
}
return ans;
}

template<typename T>
void setmin(T& a, T b){
	if(a > b)a = b;
}

int dp[101][51][101];
	const vector<int> A = {0,1,0,1,1,0,1,0,0,2,0,1,2,0,1,2,1,1,2,2,2,0,2,2,0,1,3,0,3,0,0,3,1,1,1,1,3,2,2,0,3,0,3,2,1,3,2,1,2,3,0,4,3,2,0,1,4,2,1,0,0,3,4,1,1,3,3,3,1,2,0,0,4,4,2,4,1,1,4,2,2,3,2,3,4,2,2,4,3,0,4,3,5,1,3,1,4,4,3,5,3,1,4,5,2,2,3,4,2,3,1,5,2,2,5,4,4,4,2,4,1,5,2,3,3,4,3,5,3,3,5,5,4,2,4,3,6,5,3,5,2,6,4,5,4,3,6,6,4,5,4,5,4,5,3,3,6,5,6,4,4,5,6,6,4,6,6,4,5,4,5,5,3,5,4,6,6,6,4,7,5,5,6,7,4,6,6,5,7,4,7,5,7,5,6,4,5,6,6,7,6,5,7,6,7,5,6,5,7,5,7,6,7,7,8,6,5,6,6,8,6,8,7,7,8,7,7,6,8,5,6,8,6,7,8,7,8,6,8,7,7,8,8,7,6,7,6,6,8,6,8,8,7,7,7,9,8,9,8,6,9,7,8,9,8,8,7,9,7,9,7,8,8,9,7,7,8,8,8,9,9,9,7,9,8,9,10,8,9,10,8,8,7,9,8,8,10,9,10,9,10,9,9,8,9,10,10,10,9,8,8,10,9,9,9,10,9,10,9,10,11,9,10,10,10,10,9,9,11,10,11,10,10,10,10,11,11,10,10,11,11};
	const vector<int> B = {0,0,1,0,1,1,1,2,0,0,2,2,0,1,0,1,2,1,1,0,2,2,2,1,3,2,0,0,1,1,3,0,3,0,3,1,1,2,0,3,0,2,2,3,3,2,1,2,3,1,4,0,2,3,1,0,1,2,4,4,3,0,1,4,1,3,1,3,3,4,4,2,0,2,0,1,2,4,2,4,1,2,3,3,2,2,4,3,4,4,0,0,1,4,1,3,3,1,4,1,3,1,2,2,5,4,2,3,3,4,2,2,5,1,1,0,4,4,2,1,4,2,5,3,4,3,5,3,1,5,1,3,4,4,2,5,1,3,2,2,5,2,4,4,3,4,2,1,5,4,1,1,5,3,3,5,2,4,3,5,2,2,3,1,4,2,3,3,3,5,5,4,5,5,6,4,4,1,6,2,2,5,3,2,6,2,4,4,2,5,3,5,3,3,3,6,6,5,4,2,5,6,3,5,4,6,2,4,4,5,3,4,4,2,2,3,6,5,6,2,6,3,5,4,3,3,5,6,3,6,4,2,5,5,4,4,4,6,3,3,5,2,4,6,7,6,7,6,4,7,5,3,6,5,4,3,5,3,5,7,3,6,4,4,5,3,7,4,5,3,7,6,6,4,6,7,6,5,4,5,4,3,7,5,6,5,3,7,4,3,5,7,7,5,6,7,4,6,3,6,4,6,4,7,5,4,3,5,6,8,7,5,7,7,5,4,6,5,7,6,4,7,6,5,4,6,7,8,5,5,5,7,6,7,7,6,6,8,7,7,8};
	const vector<int> C = {1,0,0,1,0,1,1,0,2,0,1,0,1,2,2,0,1,2,1,2,0,2,1,2,0,2,0,3,0,3,1,1,0,3,1,3,1,2,3,2,2,3,0,0,2,1,3,3,1,2,0,1,2,2,4,4,0,3,0,1,3,3,1,1,4,0,3,1,3,0,2,4,2,0,4,2,4,2,1,1,4,3,3,2,2,4,2,0,0,3,3,4,0,3,4,4,1,3,1,1,3,5,3,0,0,3,4,2,4,2,5,1,1,5,2,4,0,1,5,4,4,2,2,4,3,3,0,0,5,1,3,1,2,4,4,2,1,2,5,3,3,0,3,0,4,4,1,2,0,1,5,4,1,3,5,3,2,2,0,2,5,4,1,3,4,3,2,5,4,3,0,3,4,1,0,0,1,4,1,0,5,2,3,1,2,4,2,4,2,4,0,3,1,5,4,3,0,0,3,3,1,1,2,2,0,2,5,5,1,4,3,4,2,4,1,5,3,3,0,2,1,0,0,3,1,4,1,2,2,4,5,3,4,2,0,4,1,3,3,5,3,4,2,0,0,1,1,4,3,2,0,4,2,4,5,0,1,1,2,3,2,3,4,0,3,5,0,1,5,3,1,0,1,2,4,2,2,4,5,0,3,4,3,1,3,2,1,0,4,2,5,1,4,3,4,2,1,0,3,1,2,2,5,3,4,3,4,1,3,1,4,2,0,1,5,4,4,3,2,1,1,3,2,4,5,3,4,1,1,5,2,1,4,2,3,1,2,1,4,1,1};


void solveC(){
	const int _N = A.size();
	for(int i=0;i<101;++i)
	for(int j=0;j<51;++j)
	for(int k=0;k<101;++k)
		dp[i][j][k] = 1e9;
	dp[0][0][0] = 0;
	
	for(int i=0;i<101;++i)
	for(int j=0;j<51;++j)
	for(int k=0;k<101;++k){
		for(int q=0;q<_N;++q)
			if(i+A[q] < 101 && j+B[q] < 51 && k+C[q] < 101 )
				setmin(dp[i+A[q]][j+B[q]][k+C[q]], dp[i][j][k]+1);
	}


	ll t, a, b, c;
	cin>>t;
	while(t-->0){
		cin>>a>>b>>c;
		if(b&1)cout<<"-1\n";
		else cout<<dp[a][b/2][c]<<'\n';
	}

}

int main() {
	// cin.tie(0);
	// ios_base::sync_with_stdio(0);
	solveC();
	return 0;
}